name: Fetch from server
on:
  schedule:
    - cron: "10,40 * * * *"
  workflow_dispatch:

permissions:
  contents: write

jobs:
  scrape:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Config Github
        run: |
          git config --local user.email "actions@github.com"
          git config --local user.name "GitHub Actions"

      - name: Just Do It
        env:
          URLS: ${{ secrets.PROXIES_URLS }}
        run: |
          if [[ -z "$URLS" ]]; then
            echo "❌ PROXIES_URLS is not set"
            exit 1
          fi

          # 拉取 star-history 图表
          timeout 10 curl -fsSL "https://api.star-history.com/svg?repos=PuddinCat/BestClash&type=Date" \
            -o /tmp/stars.svg && mv /tmp/stars.svg .

          # 初始化合并文件
          echo "proxies:" > all_proxies.yaml
          echo "proxy-groups:" >> all_proxies.yaml
          echo "rules:" >> all_proxies.yaml

          # 定义临时文件
          tmp_proxies=$(mktemp)
          tmp_groups=$(mktemp)
          tmp_rules=$(mktemp)

          # 循环处理每个 URL
          i=1
          while read -r url; do
            [[ -z "$url" ]] && continue
            out="proxies${i}.yaml"
            echo "⬇️ Downloading $url -> $out"
            curl -fsSL "$url" -o "$out"
            ret=$?
            length=$(wc -l < "$out")
            if (( ret != 0 )) || (( length < 10 )); then
              echo "❌ error: $out is invalid (ret=$ret, length=$length)"
              exit 1
            fi

            # 提取内容到临时文件
            awk '/^proxies:/ {found=1; next} /^proxy-groups:/ {found=0} found {print}' "$out" >> "$tmp_proxies"
            awk '/^proxy-groups:/ {found=1; next} /^rules:/ {found=0} found {print}' "$out" >> "$tmp_groups"
            awk '/^rules:/ {found=1; next} found {print}' "$out" >> "$tmp_rules"

            ((i++))
          done <<< "$URLS"

          # 去重
          sort -u "$tmp_proxies" -o "$tmp_proxies"
          sort -u "$tmp_groups" -o "$tmp_groups"
          sort -u "$tmp_rules" -o "$tmp_rules"

          # 追加到合并文件
          sed -i "/^proxies:/r $tmp_proxies" all_proxies.yaml
          sed -i "/^proxy-groups:/r $tmp_groups" all_proxies.yaml
          sed -i "/^rules:/r $tmp_rules" all_proxies.yaml

          # 清理临时文件
          rm -f "$tmp_proxies" "$tmp_groups" "$tmp_rules"

          # 提交更新
          git add . 
          git commit -m "Update: $(date)" && git push || echo "nothing to push"
